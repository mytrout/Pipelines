trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  major: 0
  minor: 15
  patch: $[counter(variables['minor'], 0)]
  buildId: $[counter(variables['patch'], 0)]

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install latest version of NuGet tools.'

- task: DotNetCoreCLI@2
  inputs:
     command: build
     projects: $(solution)
     arguments: '--configuration $(buildConfiguration) --force -p:Version=$(major).$(minor).$(patch)-beta;AssemblyVersion=$(major).$(minor).$(patch).$(buildId);FileVersion=$(major).$(minor).$(patch).$(buildId)'
  displayName: 'Build the solution.'

#
# Could not display code coverage in Azure DevOps with standard VS Test usages.
# https://stackoverflow.com/questions/60893419/azure-devops-code-coverage-for-net-core-3-1/60894835#60894835
#
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: 'install --tool-path "$(Agent.TempDirectory)/tools" dotnet-reportgenerator-globaltool'
  displayName: 'Install dotnet reportgenerator globaltool.'

- task: DotNetCoreCLI@2
  inputs:
     command: test
     projects: $(solution)
     arguments: --configuration $(BuildConfiguration) --collect "XPlat Code Coverage" 
  displayName: 'Run the unit and simple integration tests.'

- script: '$(Agent.TempDirectory)/tools/reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetDir:$(Build.SourcesDirectory)/TestResults/Coverage/Reports -reporttypes:Cobertura'
  displayName: 'Create Cobertura code coverage reports.'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/TestResults/Coverage/Reports/Cobertura.xml
    failIfCoverageEmpty: false 
  displayName: 'Publish code coverage to Azure DevOps.'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg;!$(Build.SourcesDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '15caf682-67e1-4222-afe8-4a555bd7394d'
    allowPackageConflicts: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Publish the nuget package to ADO artifacts.'