<#@ template language="C#" hostSpecific="true" 
#><#@ output extension=".cs" 
#><#@ assembly Name="System.Linq.dll" 
#><#@ assembly Name="System.Xml.dll" 
#><#@ import namespace="System.Collections.Generic" 
#><#@ import namespace="System.IO" 
#><#@ import namespace="System.Linq" 
#><#@ import namespace="System.Xml" 
#><#
//
// Formatting with the line breaks inside the T4 tags allows the output to skip extra CRLF
// at the beginning of the file.  IOW, Line #1 of the output file starts with the copyright xml tag,
// just like every other code file in the project.
// 
	string namespaceName = "MyTrout.Pipelines";
	string className = Path.GetFileNameWithoutExtension(this.Host.TemplateFile);
	string resxFile = Path.Combine(Path.GetDirectoryName(this.Host.TemplateFile), Path.GetFileNameWithoutExtension(this.Host.TemplateFile) + ".resx");

	XmlDocument doc = new XmlDocument();
	doc.Load(resxFile);

	Dictionary<string, string> values = new Dictionary<string, string>();

	XmlNodeList list = doc.SelectNodes("//data");
	foreach(XmlNode node in list)
	{
		values.Add(node.Attributes.GetNamedItem("name").Value, node.SelectSingleNode("./value").InnerText);
	}
#>// <copyright file="<#=className #>.cs" company="Chris Trout">
// MIT License
//
// Copyright(c) 2019-2021 Chris Trout
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// </copyright>
/*-----------------------------------------------------------------------------------------------------------
 * <auto-generated>
 *     This code was generated by a tool.
 *     Runtime Version: .NET 6.0
 *
 *     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 * </auto-generated>
 *---------------------------------------------------------------------------------------------------------*/
namespace <#=namespaceName #>
{
	using System.Globalization;

	/// <summary>
	/// The <see cref="<#=className#>" /> class provides a wrapper around resource files that allows localized strings to be returned, as needed.
	/// </summary>
	[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
	public static class <#=className #>
	{
		/// <summary>
		/// Initializes static properties of the <see cref="<#=className#>" /> class.
		/// </summary>
		static <#=className #>()
		{
			<#=className #>.ResourceManager = new global::System.Resources.ResourceManager(typeof(<#=className #>));
		}

		/// <summary>
		/// Gets a singleton <see cref="System.Resources.ResourceManager" /> instance of the local resource manager.
		/// </summary>
		public static global::System.Resources.ResourceManager ResourceManager { get; private set; }
<#
	foreach (string key in values.Keys)
	{
#>

		/// <summary>
		/// Looks up a localized string like "<#=values[key].Replace("<", "&lt;").Replace(">", "&gt;")#>".
		/// </summary>
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings", Justification = "This is T4-generated code.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		public static string <#=key #>()
		{
			return <#=className #>.<#=key #>(CultureInfo.CurrentCulture);
		}

		/// <summary>
		/// Looks up a localized string using a specific culture like "<#=values[key].Replace("<", "&lt;").Replace(">", "&gt;")#>".
		/// </summary>
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings", Justification = "This is T4-generated code.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		public static string <#=key #>(CultureInfo culture)
		{
			return <#=className#>.ResourceManager.GetString("<#=key#>", culture);
		}
		<# if( values[key].Contains("{0}"))
		{ #>
		
		/// <summary>
		/// Looks up a localized string using a specific culture like "<#=values[key].Replace("<", "&lt;").Replace(">", "&gt;")#>".
		/// </summary>
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings", Justification = "This is T4-generated code.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		public static string <#=key #>(params object[] args)
		{
			return <#=className #>.<#=key #>(CultureInfo.CurrentCulture, args);
		}

		/// <summary>
		/// Looks up a localized string using a specific culture like "<#=values[key].Replace("<", "&lt;").Replace(">", "&gt;")#>".
		/// </summary>
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1055:UriReturnValuesShouldNotBeStrings", Justification = "This is T4-generated code.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1702:CompoundWordsShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707:IdentifiersShouldNotContainUnderscores", Justification = "This is T4-generated code from a resources file.")]
		[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", Justification = "This is T4-generated code from a resources file.")]
		public static string <#=key #>(CultureInfo culture, params object[] args)
		{
			return string.Format(culture, <#=className#>.ResourceManager.GetString("<#=key#>", culture), args);
		}
<#
		}	// end if (values[key].Contains("{0}"))	
	}	// end foreach(string key in values.AllKeys)
#>
}
}
