name: 'Pipelines.Hosting v$(major).$(minor).$(patch).$(buildId)$(suffix)'

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - Hosting/*
    exclude:
    - README.md
    - LICENSE

pr:
  branches:
    include:
    - master
  paths:
    include:
    - Hosting/*
    exclude:
    - README.md
    - LICENSE

pool:
  vmImage: 'windows-latest'

variables:
- name: 'solution'
  value: '**/Hosting/*.sln'

- name: 'buildPlatform'
  value: 'Any CPU'

- name: 'buildConfiguration'
  value: 'Release'

- group: 'MyTrout.Pipelines.Hosting.Version'

- name: 'buildId'
  value: $[counter(variables['patch'], 0)]

- group: 'Pipelines Artifacts Feed'
- group: 'SonarQube Analysis'

- name: 'sonarCloudProjectKey'
  value: 'Pipelines.Hosting'

- name: 'sonarCloudProjectName'
  value: 'Pipelines.Hosting'

- name: 'sonarCloudSourceBranch'
  value: 'refs/heads/master'
  
steps:
  - template: ../nuget-build-template.yml
- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.SourcesDirectory)/**/*.$(major).$(minor).$(patch)$(suffix).nupkg;'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(publishVstsFeed)'
    allowPackageConflicts: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'Publish the nuget package to ADO artifacts.'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['sonarCloudEnabled'], 'YES'))
  displayName: 'Publish SonarCloud results to ADO pipeline results.'