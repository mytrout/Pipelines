name: 'Pipelines.Steps.Azure.ServiceBus v$(major).$(minor).$(patch).$(buildId)$(suffix)'

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - Steps/Azure/ServiceBus/*
    exclude:
    - changelog.md
    - README.md
    - License.md
    
pr:
  branches:
    include:
    - master
  paths:
    include:
    - Steps/Azure/ServiceBus/*
    exclude:
    - changelog.md
    - README.md
    - License.md

pool:
  vmImage: 'windows-latest'
 
variables:
- name: 'solution'
  value: '**/Steps/Azure/ServiceBus/*.sln'

- name: 'buildPlatform'
  value: 'Any CPU'

- name: 'buildConfiguration'
  value: 'Release'

- group: 'MyTrout.Pipelines.Steps.Azure.ServiceBus.Version'

- name: 'buildId'
  value: $[counter(variables['patch'], 0)]

- name: 'suffix'
  value: ''

- group: 'Pipelines Artifacts Feed'
- group: 'SonarQube Analysis'

- name: "artifactPublishEnabled"
  value: "YES"

- name: 'sonarCloudProjectKey'
  value: 'Pipelines.Steps.Azure.ServiceBus'

- name: 'sonarCloudProjectName'
  value: 'Pipelines.Steps.Azure.ServiceBus'

- name: 'primarySourceBranch'
  value: 'refs/heads/master'

- name: 'resourceGroupName'
  value: 'mytrout-servicebus-$(Build.Reason)-$(major).$(minor).$(patch).$(buildId)$(suffix)-RG'

- name: 'resourceGroupLocation'
  value: 'Central US'

- name: 'servicebusNamespace'
  value: 'mytrout-servicebus-$(Build.Reason)-$(major)-$(minor)-$(patch)-$(buildId)$(suffix)-ASB'
  
steps:
  # This PowerShell step provides more visibility into the non-master branch builds at the pipeline level
  #     by adding the branch name on non-master builds.
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
        if ("$(Build.SourceBranch)" -eq "$(primarySourceBranch)") {
          Write-Host "Master branch build - no name change required."
        }
        else {
          Write-Host "##vso[build.updatebuildnumber]$(Build.BuildNumber)-$(Build.SourceBranchName)"
        }    
    failOnStderr: true
  displayName: 'Alter the Build Number if a non master branch build is requested.'

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
      deploymentScope: 'Subscription'
      azureResourceManagerConnection: 'MyTrout Azure Subscription (45263e77-2d46-4175-8047-299a9b696ad2)'
      subscriptionId: '45263e77-2d46-4175-8047-299a9b696ad2'
      location: '$(resourceGroupLocation)'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.SourcesDirectory)/Steps/Azure/ServiceBus/azure-arm-resourcegroup.json'
      overrideParameters: '-resourceGroupName $(resourceGroupName)'
      deploymentMode: 'Incremental'
  displayName: 'Create temporary Resource Group for Service Bus instance.'    

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'MyTrout Azure Subscription (45263e77-2d46-4175-8047-299a9b696ad2)'
      subscriptionId: '45263e77-2d46-4175-8047-299a9b696ad2'
      action: 'Create Or Update Resource Group'
      resourceGroupName:  '$(resourceGroupName)'
      location: '$(resourceGroupLocation)'
      templateLocation: 'Linked artifact'
      csmFile: '$(Build.SourcesDirectory)/Steps/Azure/ServiceBus/azure-arm-servicebus.json'
      overrideParameters: '-servicebusNamespace "$(servicebusNamespace)"'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'ServiceBusCreatedOutput'
  displayName: 'Create temporary Service Bus instance in temporary Resource Group.'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Format-List -InputObject $($env:ServiceBusCreatedOutput)
      $outputs = ConvertFrom-Json $($env:ServiceBusCreatedOutput)
      $connectionString = $outputs.ConnectionString.value
      
      if($connectionString -eq $null) {
        throw [System.IO.Exception] "Connection String not found."
      } else {
        Write-Host $connectionString
        [System.Environment]::SetEnvironmentVariable('PIPELINE_TEST_AZURE_SERVICE_BUS_CONNECTION_STRING', "$connectionString",[System.EnvironmentVariableTarget]::Machine)  
      }
    failOnStderr: true
  displayName: 'Add the Azure Service Bus Connection String to the build server.'

- template: ../../../nuget-build-template.yml

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'MyTrout Azure Subscription (45263e77-2d46-4175-8047-299a9b696ad2)'
    subscriptionId: '45263e77-2d46-4175-8047-299a9b696ad2'
    action: 'DeleteRG'
    resourceGroupName: '$(resourceGroupName)'
  condition: always()
  displayName: 'Delete temporary Resource Group.'
